<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX0">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0.100000001</X>
				<Y>0</Y>
				<Z>0.5</Z>
				<R00>1</R00>
				<R01>-0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>0</R11>
				<R12>-1</R12>
				<R20>0</R20>
				<R21>1</R21>
				<R22>0</R22>
			</CoordinateFrame>
			<string name="Name">MermaidTears</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=71386372</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX1">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>7.30000019</Y>
					<Z>9.53674316e-007</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>1</R12>
					<R20>0</R20>
					<R21>-1</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>1.20000005</Y>
					<Z>1</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX2">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=71386172</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=71386203</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX3">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">GhostShip_Main</string>
				<ProtectedString name="Source">--local mDebugId = game.Workspace.DebugId.Value
--game.Workspace.DebugId.Value = game.Workspace.DebugId.Value+1
--print(&quot;Running swordscript &lt;&quot;..mDebugId..&quot;&gt;&quot;)

-------------------------------------
-- Makes an RBX::Lua Instance using
-- a table of key-value pairs to
-- initialize it. Values with numeric 
-- keys will be parented to the object
-- and other values will be set
-- as members of the object.
function Create(ty)
&#9;return function(data)
&#9;&#9;local obj = Instance.new(ty)
&#9;&#9;for k, v in pairs(data) do
&#9;&#9;&#9;if type(k) == &apos;number&apos; then
&#9;&#9;&#9;&#9;v.Parent = obj
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;obj[k] = v
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;return obj
&#9;end
end

---------------------------------------
-- Same as Make, but modifies an existing
-- object rather than creating ones.
function Modify(obj, data)
&#9;for k, v in pairs(data) do
&#9;&#9;if type(data) == &apos;number&apos; then
&#9;&#9;&#9;data.Parent = obj
&#9;&#9;else
&#9;&#9;&#9;data[k] = v
&#9;&#9;end
&#9;end
&#9;return obj
end

-----------------------------------------
-- Creates a class which can be instantiated
-- using `CreateCLASSNAME( ... )`.
---usage:
--class&apos;MyClass&apos;(function(this, arg1)
--&#9;this.ClassMember = value
--&#9;function this.ClassMethod(...) ... end
--end, function(def)
--&#9;def.StaticMember = value
--&#9; function def.StaticMethod(...) ... end
--end)
--local obj = CreateMyClass(arg1)
------------------------------------------
local function class(name)
&#9;local def = {}
&#9;getfenv(0)[name] = def
&#9;return function(ctor, static)
&#9;&#9;local nctor = function(...)
&#9;&#9;&#9;local this = {}
&#9;&#9;&#9;if ctor then
&#9;&#9;&#9;&#9;ctor(this, ...)
&#9;&#9;&#9;end
&#9;&#9;&#9;return this
&#9;&#9;end
&#9;&#9;getfenv(0)[&apos;Create&apos;..name] = nctor
&#9;&#9;if static then static(def) end
&#9;end
end


---------------------------------------------
-- Signal class for custom-made events
--API:
-- Signal:connect(callback)
-- Signal:fire(...)
-- Signal:wait()
---------------------------------------------
class&apos;Signal&apos;(function(this)
&#9;local mListeners = {}
&#9;local mWaitObject = Create&apos;BoolValue&apos;{}

&#9;function this:connect(func)
&#9;&#9;local connection = {}
&#9;&#9;function connection:disconnect()
&#9;&#9;&#9;mListeners[func] = nil
&#9;&#9;end
&#9;&#9;mListeners[func] = connection
&#9;&#9;return connection
&#9;end

&#9;function this:fire(...)
&#9;&#9;--print(&quot;Fire evt&lt;&quot;..tostring(this)..&quot;&gt; from script&lt;&quot;..mDebugId..&quot;&gt;&quot;)
&#9;&#9;for func, conn in pairs(mListeners) do
&#9;&#9;&#9;--print(&quot;-&gt; &quot;..tostring(func)..&quot;( ... )&quot;)
&#9;&#9;&#9;func(...)
&#9;&#9;end
&#9;&#9;mWaitObject.Value = not mWaitObject.Value
&#9;end

&#9;function this:wait()
&#9;&#9;mWaitObject.Changed:wait()
&#9;end
end)


--------------------------------------------------
-- Bin class for cleaning up assets
--API: 
-- Bin:add(func: Function, ident: String)
-- Bin:clean(ident: String)
-- Bin:cleanAll()
--------------------------------------------------
class&apos;Bin&apos;(function(this)
&#9;local mGarbage = {}

&#9;function this:add(func, ident)
&#9;&#9;ident = ident or &apos;__unnamed&apos;
&#9;&#9;if not mGarbage[ident] then
&#9;&#9;&#9;mGarbage[ident] = {}
&#9;&#9;end
&#9;&#9;mGarbage[ident][#mGarbage[ident]+1] = func
&#9;end

&#9;function this:clean(ident)
&#9;&#9;local listToCall = mGarbage[ident]
&#9;&#9;if listToCall then
&#9;&#9;&#9;for _, func in pairs(listToCall) do
&#9;&#9;&#9;&#9;func()
&#9;&#9;&#9;end
&#9;&#9;&#9;mGarbage[ident] = nil
&#9;&#9;end
&#9;end

&#9;function this:cleanAll()
&#9;&#9;for ident, list in pairs(mGarbage) do
&#9;&#9;&#9;for _, func in pairs(list) do
&#9;&#9;&#9;&#9;func()
&#9;&#9;&#9;end
&#9;&#9;&#9;mGarbage[ident] = nil
&#9;&#9;end
&#9;end
end)


-----------------------------------------------------
-- AnimationProvider class for easy loading of
-- animation assets into animationtracks once 
-- a humanoid is available.
--API:
-- AnimationProvider:registerAnimation(ident, assetid)
-- AnimationProvider:setHumanoid(humanoid)
-- AnimationProvider:setTool(tool)
-- AnimationProvider:getAnimation(ident)
-----------------------------------------------------
class&apos;AnimationProvider&apos;(function(this)
&#9;local mAnimations = {--[[ident =&gt; {AnimationId, CurrentTrack, CurrentAnim} ]]}
&#9;local mCurrentHumanoid = nil

&#9;function this:registerAnimation(ident, assetid)
&#9;&#9;--check for an existing copy of the anim
&#9;&#9;local existingAnim = Tool.Tool:FindFirstChild(&apos;ANIM_&apos;..ident)
&#9;&#9;&#9;
&#9;&#9;--make the data for this anim
&#9;&#9;local animdat = {
&#9;&#9;&#9;AnimationId = assetid, 
&#9;&#9;&#9;CurrentAnim = existingAnim or Create&apos;Animation&apos;{
&#9;&#9;&#9;&#9;Name = &quot;ANIM_&quot;..ident,
&#9;&#9;&#9;&#9;AnimationId = assetid,&#9;
&#9;&#9;&#9;},
&#9;&#9;}
&#9;&#9;mAnimations[ident] = animdat

&#9;&#9;--if there&apos;s a current tool, put it in there
&#9;&#9;if Tool.Tool then
&#9;&#9;&#9;Tool.HUGE_EQUIP_HACK = true
&#9;&#9;&#9;animdat.CurrentAnim.Parent = Tool.Tool
&#9;&#9;&#9;Tool.HUGE_EQUIP_HACK = false
&#9;&#9;end
&#9;&#9;
&#9;&#9;--if there&apos;s a humanoid load the animation track
&#9;&#9;if mCurrentHumanoid then
&#9;&#9;&#9;animdat.CurrentTrack = mCurrentHumanoid:LoadAnimation(animdat.CurrentAnim)
&#9;&#9;end
&#9;end

&#9;function this:setHumanoid(humanoid)
&#9;&#9;mCurrentHumanoid = humanoid
&#9;&#9;for _, anim in pairs(mAnimations) do
&#9;&#9;&#9;anim.CurrentTrack = humanoid:LoadAnimation(anim.CurrentAnim)
&#9;&#9;end
&#9;end

&#9;function this:getAnimation(ident)
&#9;&#9;local dat = mAnimations[ident]
&#9;&#9;if not dat then error(&quot;Gear Fatal Error: Animation `&quot;..ident..&quot;` not found&quot;) end
&#9;&#9;if not dat.CurrentTrack then 
&#9;&#9;&#9;error(&quot;Gear Fatal Error: No Humanoid for animation `&quot;..ident..&quot;` to run in&quot;) 
&#9;&#9;end
&#9;&#9;return dat.CurrentTrack
&#9;end
end)


----------------------------------------------
-- SoundProvider class
-- functions similarily to the animationprovider
----------------------------------------------
class&apos;SoundProvider&apos;(function(this)
&#9;local mSounds = {}

&#9;function this:registerSound(ident, assetid, inpart)
&#9;&#9;inpart = inpart or Tool.Tool:FindFirstChild(&apos;Handle&apos;)
&#9;&#9;if not inpart then
&#9;&#9;&#9;repeat
&#9;&#9;&#9;&#9;inpart = Tool.Tool.ChildAdded:wait()
&#9;&#9;&#9;until inpart.Name == &apos;Handle&apos;
&#9;&#9;end
&#9;&#9;local existingSound = inpart:FindFirstChild(&apos;SOUND_&apos;..ident)
&#9;&#9;local sounddat = {
&#9;&#9;&#9;SoundId = assetid,
&#9;&#9;&#9;CurrentSound = existingSound or Create&apos;Sound&apos;{
&#9;&#9;&#9;&#9;Name = &apos;SOUND_&apos;..ident,
&#9;&#9;&#9;&#9;SoundId = assetid,
&#9;&#9;&#9;&#9;Parent = inpart,
&#9;&#9;&#9;},
&#9;&#9;}
&#9;&#9;mSounds[ident] = sounddat
&#9;end

&#9;function this:getSound(ident)
&#9;&#9;local dat = mSounds[ident]
&#9;&#9;if dat then
&#9;&#9;&#9;return dat.CurrentSound
&#9;&#9;end
&#9;end
end)


----------------------------------------------
-- DebounceProvider class -- Prevent events
-- from happening in too rapid succession
----------------------------------------------
class&apos;DebounceProvider&apos;(function(this)
&#9;local mFlagNameToLastTime = {}

&#9;function this:test(ident, delta)
&#9;&#9;local t = tick()
&#9;&#9;local lastTime = mFlagNameToLastTime[ident] or 0
&#9;&#9;if delta then
&#9;&#9;&#9;return (t-lastTime) &gt; delta
&#9;&#9;else
&#9;&#9;&#9;return mFlagNameToLastTime[ident]
&#9;&#9;end
&#9;end
&#9;function this:set(ident, state)
&#9;&#9;if state then
&#9;&#9;&#9;mFlagNameToLastTime[ident] = state
&#9;&#9;elseif state == false then
&#9;&#9;&#9;mFlagNameToLastTime[ident] = false
&#9;&#9;else
&#9;&#9;&#9;mFlagNameToLastTime[ident] = tick()
&#9;&#9;end
&#9;end
end)


function TagHumanoid(humanoid)
&#9;if Tool.Player then
&#9;&#9;local tag = Create&apos;ObjectValue&apos;{
&#9;&#9;&#9;Name = &quot;creator&quot;, 
&#9;&#9;&#9;Value = Tool.Player,
&#9;&#9;&#9;Parent = humanoid,
&#9;&#9;}
&#9;&#9;game.Debris:AddItem(tag, 1)
&#9;end
end


------- wait for any event in a set of events  to fire ------
function WaitForAny(tb)
&#9;local evt = tb
&#9;local conn = {}
&#9;local eventargs = nil
&#9;local waitProxy = Create&apos;BoolValue&apos;{}
&#9;for _, e in pairs(evt) do
&#9;&#9;local c = e:connect(function(...)
&#9;&#9;&#9;for _, c in pairs(conn) do
&#9;&#9;&#9;&#9;c:disconnect()
&#9;&#9;&#9;end
&#9;&#9;&#9;eventargs = {...}
&#9;&#9;&#9;waitProxy.Value = not waitProxy.Value
&#9;&#9;end)
&#9;&#9;conn[#conn+1] = c
&#9;end
&#9;--
&#9;waitProxy.Changed:wait()
&#9;--
&#9;return unpack(eventargs)
end


----------------------------------------------
-- Tool singleton class
--API:
-- ...
class&apos;Tool&apos;(nil, function(this)
&#9;--need this here for the animationprovider to use
&#9;this.HUGE_EQUIP_HACK = false

&#9;this.Bin = CreateBin()
&#9;this.AnimationProvider = CreateAnimationProvider()
&#9;this.DebounceProvider = CreateDebounceProvider()
&#9;this.SoundProvider = CreateSoundProvider()

&#9;--general values
&#9;this.Tool = script.Parent
&#9;this.Player = nil
&#9;this.Humanoid = nil
&#9;this.Character = nil

&#9;--============ several flags for the gear
&#9;--nothing

&#9;--some events
&#9;this.Equipped = CreateSignal()
&#9;this.Unequipped = CreateSignal()
&#9;this.OwnerChange = CreateSignal()

&#9;--mouse utility events
&#9;this.MouseClick = CreateSignal()
&#9;this.MouseRelease = CreateSignal()
&#9;this.MouseDoubleClick = CreateSignal()
&#9;this.DoubleClickThreshold = 0.2
&#9;this.MouseDown = false
&#9;this.KeyDown = CreateSignal()

&#9;local mLastClickTime = 0

&#9;--
&#9;local mCharacterChangedCn = nil
&#9;local mCharacterChildAddedCn = nil
&#9;local function locateAndAssignParts(ch)
&#9;&#9;if ch:FindFirstChild(&apos;Humanoid&apos;) then this.Humanoid = ch.Humanoid end
&#9;&#9;if ch:FindFirstChild(&apos;Head&apos;) then this.HeadPart = ch.Head end
&#9;&#9;if ch:FindFirstChild(&apos;Torso&apos;) then this.TorsoPart = ch.Torso end
&#9;&#9;if ch:FindFirstChild(&apos;Right Arm&apos;) then &#9;this.RightArmPart = ch[&apos;Right Arm&apos;] end
&#9;&#9;if ch:FindFirstChild(&apos;Left Arm&apos;) then &#9;this.LeftArmPart = &#9;ch[&apos;Left Arm&apos;] end
&#9;&#9;if ch:FindFirstChild(&apos;Right Leg&apos;) then &#9;this.RightLegPart = ch[&apos;Right Leg&apos;] end
&#9;&#9;if ch:FindFirstChild(&apos;Left Leg&apos;) then &#9;this.LeftLegPart = &#9;ch[&apos;Left Leg&apos;] end
&#9;end
&#9;local function listenForCharacterAndParts(player)
&#9;&#9;this.Tool = script.Parent
&#9;&#9;this.Player = player
&#9;&#9;--
&#9;&#9;if mCharacterChangedCn then mCharacterChangedCn:disconnect() end
&#9;&#9;mCharacterChangedCn = player.Changed:connect(function(prop)
&#9;&#9;&#9;if prop == &apos;Character&apos; and player.Character then
&#9;&#9;&#9;&#9;if mCharacterChildAddedCn then mCharacterChildAddedCn:disconnect() end
&#9;&#9;&#9;&#9;mCharacterChildAddedCn = player.Character.ChildAdded:connect(function(ch)
&#9;&#9;&#9;&#9;&#9;locateAndAssignParts(player.Character)
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;&#9;if player.Character then
&#9;&#9;&#9;if mCharacterChildAddedCn then mCharacterChildAddedCn:disconnect() end
&#9;&#9;&#9;mCharacterChildAddedCn = player.Character.ChildAdded:connect(function(ch)
&#9;&#9;&#9;&#9;locateAndAssignParts(player.Character)
&#9;&#9;&#9;end)
&#9;&#9;end
&#9;end
&#9;script.Parent.Changed:connect(function(prop)
&#9;&#9;if prop == &apos;Parent&apos; then
&#9;&#9;&#9;--if it&apos;s in a character or backpack, find stuff
&#9;&#9;&#9;local backpack = script.Parent.Parent
&#9;&#9;&#9;if backpack and backpack:IsA(&apos;Backpack&apos;) then
&#9;&#9;&#9;&#9;listenForCharacterAndParts(backpack.Parent)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end)
&#9;--if I&apos;m allready in the backpack, listen for character
&#9;if script.Parent.Parent:IsA(&apos;Backpack&apos;) then
&#9;&#9;listenForCharacterAndParts(script.Parent.Parent.Parent)
&#9;end
&#9;script.Parent.Equipped:connect(function(mouse)
&#9;&#9;--print(&quot;Internal Equipped: Time b: &quot;..time())
&#9;&#9;--set up general values in the tool
&#9;&#9;this.Mouse = mouse
&#9;&#9;local curOwner = game.Players:GetPlayerFromCharacter(script.Parent.Parent)
&#9;&#9;if curOwner ~= this.Player then
&#9;&#9;&#9;this.Player = curOwner
&#9;&#9;&#9;this.OwnerChange:fire(this.Player)
&#9;&#9;end
&#9;&#9;this.Character = this.Player.Character
&#9;&#9;this.Humanoid = this.Character.Humanoid
&#9;&#9;this.AnimationProvider:setHumanoid(this.Humanoid)
&#9;&#9;locateAndAssignParts(this.Player.Character)

&#9;&#9;--set up the mouse events
&#9;&#9;mouse.Button1Down:connect(function()
&#9;&#9;&#9;this.MouseDown = true
&#9;&#9;&#9;local t = tick()
&#9;&#9;&#9;if (t-mLastClickTime) &lt; this.DoubleClickThreshold then
&#9;&#9;&#9;&#9;--prvent multiple double-clicks in a row
&#9;&#9;&#9;&#9;mLastClickTime = 0
&#9;&#9;&#9;&#9;this.MouseDoubleClick:fire(mouse)
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;mLastClickTime = t
&#9;&#9;&#9;&#9;this.MouseClick:fire(mouse)
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;&#9;mouse.Button1Up:connect(function()
&#9;&#9;&#9;this.MouseDown = false
&#9;&#9;&#9;this.MouseRelease:fire()
&#9;&#9;end)
&#9;&#9;mouse.KeyDown:connect(function(key)
&#9;&#9;&#9;this.KeyDown:fire(key)
&#9;&#9;end)

&#9;&#9;--done setup, call the equipped function
&#9;&#9;if this.HUGE_EQUIP_HACK then
&#9;&#9;&#9;--the HUGE_EQUIP_HACK flags tells the tool that the equip is a synchronous
&#9;&#9;&#9;--call as a result of parenting an animation to the character, which happens 
&#9;&#9;&#9;--when the tool is picked up from the workspace, but not during normal equips 
&#9;&#9;&#9;--(Why does this happen???), if this is the case, the call should be rederrred 
&#9;&#9;&#9;--one tick to ensure that all of the gear&apos;s loading can complete before it&apos;s 
&#9;&#9;&#9;--equipped event is called.
&#9;&#9;&#9;--TODO: Blame John for this.
&#9;&#9;&#9;Delay(0, function()
&#9;&#9;&#9;&#9;this.Equipped:fire(mouse)
&#9;&#9;&#9;end)
&#9;&#9;else
&#9;&#9;&#9;--otherwise, proceed as normal
&#9;&#9;&#9;this.Equipped:fire(mouse)
&#9;&#9;end
&#9;end)

&#9;script.Parent.Unequipped:connect(function()
&#9;&#9;--before my teardown, fire the event
&#9;&#9;this.Unequipped:fire()

&#9;&#9;--delete all my garbage
&#9;&#9;this.Bin:cleanAll()
&#9;end)
end)









































Tool.AnimationProvider:registerAnimation(&apos;summon&apos;, &apos;http://www.roblox.com/asset/?id=71446087&apos;)


function CreateShipModel()
local sorcusMagicNumber = 4
return Create&apos;Model&apos;{
&#9;Name = &apos;ShipModel&apos;,
&#9;--main bit
&#9;Create&apos;Part&apos;{
&#9;&#9;Name = &apos;ShipPart_Base&apos;,
&#9;&#9;FormFactor = &apos;Custom&apos;,
&#9;&#9;Size = Vector3.new(1.3, 1.1, 3.2) * sorcusMagicNumber,
&#9;&#9;CFrame = CFrame.new(CFrame.new() * Vector3.new(sorcusMagicNumber, sorcusMagicNumber, sorcusMagicNumber)),
&#9;&#9;Create&apos;SpecialMesh&apos;{
&#9;&#9;&#9;MeshId =    &apos;http://www.roblox.com/asset/?id=71385999&apos;,
&#9;&#9;&#9;TextureId = &apos;http://www.roblox.com/asset/?id=71386126&apos;,
&#9;&#9;&#9;Scale = Vector3.new(1.5,1.5,1.5) * sorcusMagicNumber,
&#9;&#9;},
&#9;},
&#9;Create&apos;Part&apos;{
&#9;&#9;Name = &apos;ShipPart_Mast1&apos;,
&#9;&#9;FormFactor = &apos;Custom&apos;,
&#9;&#9;Size = Vector3.new(0.2,2.5,0.2) * 2,
&#9;&#9;CFrame = CFrame.new(CFrame.new(0,1.4,-0.15) * Vector3.new(sorcusMagicNumber, sorcusMagicNumber, sorcusMagicNumber)) ,
&#9;&#9;Create&apos;SpecialMesh&apos;{
&#9;&#9;&#9;MeshId =    &apos;http://www.roblox.com/asset/?id=71386100&apos;,
&#9;&#9;&#9;TextureId = &apos;http://www.roblox.com/asset/?id=71386126&apos;,
&#9;&#9;&#9;Scale = Vector3.new(1.5,1.5,1.5) * sorcusMagicNumber,
&#9;&#9;},
&#9;},
&#9;Create&apos;Part&apos;{
&#9;&#9;Name = &apos;ShipPart_MainSailLower&apos;,
&#9;&#9;FormFactor = &apos;Custom&apos;,
&#9;&#9;Size = Vector3.new(2.3,1.3,0.2) * sorcusMagicNumber,
&#9;&#9;CFrame = CFrame.new(CFrame.new(0, 1.0, -0.3) * Vector3.new(sorcusMagicNumber, sorcusMagicNumber, sorcusMagicNumber)),
&#9;&#9;Create&apos;SpecialMesh&apos;{
&#9;&#9;&#9;MeshId =    &apos;http://www.roblox.com/asset/?id=71385951&apos;,
&#9;&#9;&#9;TextureId = &apos;http://www.roblox.com/asset/?id=71386126&apos;,
&#9;&#9;&#9;Scale = Vector3.new(1.5,1.5,1.5) * sorcusMagicNumber,
&#9;&#9;},
&#9;},
&#9;Create&apos;Part&apos;{
&#9;&#9;Name = &apos;ShipPart_MainSailUpper&apos;,
&#9;&#9;FormFactor = &apos;Custom&apos;,
&#9;&#9;Size = Vector3.new(1.6,0.7,0.2) * sorcusMagicNumber,
&#9;&#9;CFrame = CFrame.new(CFrame.new(0,2.0,-0.3) * Vector3.new(sorcusMagicNumber, sorcusMagicNumber, sorcusMagicNumber)),
&#9;&#9;Create&apos;SpecialMesh&apos;{
&#9;&#9;&#9;MeshId =    &apos;http://www.roblox.com/asset/?id=71386078&apos;,
&#9;&#9;&#9;TextureId = &apos;http://www.roblox.com/asset/?id=71386126&apos;,
&#9;&#9;&#9;Scale = Vector3.new(1.5,1.5,1.5) * sorcusMagicNumber,
&#9;&#9;},
&#9;},
&#9;Create&apos;Part&apos;{
&#9;&#9;Name = &apos;ShipPart_Mast2&apos;,
&#9;&#9;FormFactor = &apos;Custom&apos;,
&#9;&#9;Size = Vector3.new(0.2,1.9,0.2) * sorcusMagicNumber,
&#9;&#9;CFrame = CFrame.new(CFrame.new(0,1.4,-1.03) * Vector3.new(sorcusMagicNumber, sorcusMagicNumber, sorcusMagicNumber)),
&#9;&#9;Create&apos;SpecialMesh&apos;{
&#9;&#9;&#9;MeshId =    &apos;http://www.roblox.com/asset/?id=71386049&apos;,
&#9;&#9;&#9;TextureId = &apos;http://www.roblox.com/asset/?id=71386126&apos;,
&#9;&#9;&#9;Scale = Vector3.new(1.5,1.5,1.5) * sorcusMagicNumber,
&#9;&#9;},
&#9;},
&#9;Create&apos;Part&apos;{
&#9;&#9;Name = &apos;ShipPart_SailLower&apos;,
&#9;&#9;FormFactor = &apos;Custom&apos;,
&#9;&#9;Size = Vector3.new(1.8,1.1,0.2) * sorcusMagicNumber,
&#9;&#9;CFrame = CFrame.new(CFrame.new(0,1,-1.17) * Vector3.new(sorcusMagicNumber, sorcusMagicNumber, sorcusMagicNumber)),
&#9;&#9;Create&apos;SpecialMesh&apos;{
&#9;&#9;&#9;MeshId =    &apos;http://www.roblox.com/asset/?id=71386061&apos;,
&#9;&#9;&#9;TextureId = &apos;http://www.roblox.com/asset/?id=71386126&apos;,
&#9;&#9;&#9;Scale = Vector3.new(1.5,1.5,1.5) * sorcusMagicNumber,
&#9;&#9;},
&#9;},
&#9;Create&apos;Part&apos;{
&#9;&#9;Name = &apos;ShipPart_SailUpper&apos;,
&#9;&#9;FormFactor = &apos;Custom&apos;,
&#9;&#9;Size = Vector3.new(1.6,0.7,0.2) * sorcusMagicNumber,
&#9;&#9;CFrame = CFrame.new(CFrame.new(0,1.84,-1.17) * Vector3.new(sorcusMagicNumber, sorcusMagicNumber, sorcusMagicNumber)),
&#9;&#9;Create&apos;SpecialMesh&apos;{
&#9;&#9;&#9;MeshId =    &apos;http://www.roblox.com/asset/?id=71386078&apos;,
&#9;&#9;&#9;TextureId = &apos;http://www.roblox.com/asset/?id=71386126&apos;,
&#9;&#9;&#9;Scale = Vector3.new(1.5,1.3,1.5) * sorcusMagicNumber,
&#9;&#9;},
&#9;},
&#9;Create&apos;Part&apos;{
&#9;&#9;Name = &apos;ShipPart_Base&apos;,
&#9;&#9;FormFactor = &apos;Custom&apos;,
&#9;&#9;Size = Vector3.new(0.3, 0.3, 1.2) * sorcusMagicNumber,
&#9;&#9;CFrame = CFrame.new(CFrame.new(0,0.35,-2.3) * Vector3.new(sorcusMagicNumber, sorcusMagicNumber, sorcusMagicNumber)),
&#9;&#9;Create&apos;SpecialMesh&apos;{
&#9;&#9;&#9;MeshId =    &apos;http://www.roblox.com/asset/?id=71386018&apos;,
&#9;&#9;&#9;TextureId = &apos;http://www.roblox.com/asset/?id=71386126&apos;,
&#9;&#9;&#9;Scale = Vector3.new(1.5, 1.5, 1.5) * sorcusMagicNumber,
&#9;&#9;},
&#9;},
}
end


function GetPartsRecursive(obj, tb)
&#9;tb = tb or {}
&#9;if obj:IsA(&apos;BasePart&apos;) then
&#9;&#9;tb[#tb+1] = obj
&#9;end
&#9;for _, ch in pairs(obj:GetChildren()) do
&#9;&#9;GetPartsRecursive(ch, tb)
&#9;end
&#9;return tb
end


local RechargeGui = Create&apos;ScreenGui&apos;{
&#9;Name = &apos;GhostShipGui&apos;,
&#9;Create&apos;Frame&apos;{
&#9;&#9;Name = &apos;MainFrame&apos;,
&#9;&#9;Style = &apos;RobloxRound&apos;,
&#9;&#9;Size = UDim2.new(0, 256, 0, 32),
&#9;&#9;Position = UDim2.new(0.5, -128, 1, -150),
&#9;&#9;Create&apos;Frame&apos;{
&#9;&#9;&#9;Name = &apos;ProgressBar&apos;,
&#9;&#9;&#9;BorderSizePixel = 0,
&#9;&#9;&#9;BackgroundColor3 = Color3.new(1, 0.2, 0.2),
&#9;&#9;&#9;Size = UDim2.new(1, 0, 1, 0),
&#9;&#9;},
&#9;&#9;Create&apos;TextLabel&apos;{
&#9;&#9;&#9;Name = &apos;ProgressText&apos;,
&#9;&#9;&#9;BorderSizePixel = 0,
&#9;&#9;&#9;BackgroundTransparency = 1,
&#9;&#9;&#9;Size = UDim2.new(1, 0, 1, 0),
&#9;&#9;&#9;Font = &apos;ArialBold&apos;,
&#9;&#9;&#9;FontSize = &apos;Size24&apos;,
&#9;&#9;&#9;Text = &quot;~ Ready ~&quot;,
&#9;&#9;&#9;TextColor3 = Color3.new(0.9, 0.9, 0.9),
&#9;&#9;},
&#9;}
}


local function InflictDamage(hum, damage)
&#9;local damager = script.Parent.DamageScript:Clone()
&#9;Create&apos;ObjectValue&apos;{
&#9;&#9;Name = &apos;Owner&apos;,
&#9;&#9;Parent = damager,
&#9;&#9;Value = Tool.Player,
&#9;}
&#9;Create&apos;IntValue&apos;{
&#9;&#9;Name = &apos;Damage&apos;,
&#9;&#9;Parent = damager,
&#9;&#9;Value = damage,
&#9;}
&#9;damager.Parent = hum.Parent
&#9;damager.Disabled = false
end

local Equipped = false

local LastFire = 0
local Firing = false
local Ship;
Tool.MouseClick:connect(function()
&#9;--do some preliminary checks to bail out on
&#9;if not Tool.Mouse.Target or Firing then return end
&#9;if (Tool.HeadPart.Position - Tool.Mouse.Hit.p).magnitude &gt; 100 then return end
&#9;if (tick() - LastFire) &lt; 2 then return end

&#9;Firing = true
&#9;LastFire = tick()

&#9;--all good, create the ship
&#9;local ship = CreateShipModel()
&#9;Ship = ship

&#9;--make a failsafe to clean up the ship
&#9;Tool.Bin:add(function()
&#9;&#9;ship:Destroy()
&#9;end)

&#9;local baseAnimCF = CFrame.new((Tool.HeadPart.CFrame*CFrame.new(0, 4, 0)).p, Tool.Mouse.Hit.p)
&#9;local hitPos = Tool.Mouse.Hit.p

&#9;local partData = {}
&#9;local partSet = {}

&#9;--add the character&apos;s parts to the 
&#9;for _, p in pairs(GetPartsRecursive(Tool.Character)) do
&#9;&#9;partSet[p] = true
&#9;end

&#9;local numColliding = 0
&#9;local hitHumanoid = nil
&#9;--create data for parts and edit their stats
&#9;for _, p in pairs(ship:GetChildren()) do
&#9;&#9;if p:IsA(&apos;BasePart&apos;) then
&#9;&#9;&#9;partSet[p] = true
&#9;&#9;&#9;--anchor / cancollide off all the stuff
&#9;&#9;&#9;p.Anchored = true
&#9;&#9;&#9;p.CanCollide = falsew
&#9;&#9;&#9;p.Mesh.VertexColor = Vector3.new(0.2,1,0.2)

&#9;&#9;&#9;--add data for it
&#9;&#9;&#9;local pDat = {}
&#9;&#9;&#9;pDat.Part = p
&#9;&#9;&#9;pDat.RelCF = p.CFrame
&#9;&#9;&#9;pDat.BaseAnimCF = baseAnimCF*p.CFrame
&#9;&#9;&#9;pDat.AnimAngleModX = math.random(-8,8)/10
&#9;&#9;&#9;pDat.AnimAngleModY = math.random(-8,8)/10
&#9;&#9;&#9;pDat.Dist = math.random(5, 20)

&#9;&#9;&#9;p.Touched:connect(function(otherP)
&#9;&#9;&#9;&#9;p.CanCollide = true 
&#9;&#9;&#9;&#9;if not partSet[otherP] then
&#9;&#9;&#9;&#9;&#9;numColliding = numColliding + 1
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;if (otherP.Parent or game):FindFirstChild(&apos;Humanoid&apos;) and 
&#9;&#9;&#9;&#9;&#9;otherP.Parent.Humanoid ~= Tool.Humanoid then
&#9;&#9;&#9;&#9;&#9;print(&quot;Hit Humanoid&quot;)
&#9;&#9;&#9;&#9;&#9;hitHumanoid = otherP.Parent.Humanoid

&#9;&#9;&#9;&#9;&#9;--also do some damage to players hit with shrapnel
&#9;&#9;&#9;&#9;&#9;InflictDamage(hitHumanoid, 13)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end)
&#9;&#9;&#9;p.TouchEnded:connect(function(otherP)
&#9;&#9;&#9;&#9;if not partSet[otherP] then
&#9;&#9;&#9;&#9;&#9;numColliding = numColliding - 1
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end)

&#9;&#9;&#9;partData[#partData+1] = pDat
&#9;&#9;end
&#9;end

&#9;ship.Parent = Tool.Character

&#9;Tool.AnimationProvider:getAnimation(&apos;summon&apos;):Play(0.1, 1, 4)

&#9;--now, do animation
&#9;for i = 0, 1, 0.1 do
&#9;&#9;local baseKeyframeOffset = Vector3.new(0, (1-math.sqrt(i)), 0)
&#9;&#9;--
&#9;&#9;for _, pDat in pairs(partData) do
&#9;&#9;&#9;pDat.Part.Transparency = (1-0.6*i)
&#9;&#9;&#9;local angleMod = CFrame.Angles(pDat.AnimAngleModX*(1-i), pDat.AnimAngleModY*(1-i), 0)
&#9;&#9;&#9;pDat.Part.CFrame = pDat.BaseAnimCF - (angleMod*baseKeyframeOffset)*pDat.Dist
&#9;&#9;end
&#9;&#9;--
&#9;&#9;wait()
&#9;&#9;if not Equipped then return end
&#9;end
&#9;for _, pDat in pairs(partData) do
&#9;&#9;--also fix up the rotations after animating
&#9;&#9;pDat.Part.CFrame = pDat.BaseAnimCF
&#9;end

&#9;--see if we&apos;re all clear to fire
&#9;if numColliding &gt; 0 then
&#9;&#9;ship:Destroy()
&#9;&#9;LastFire = 0
&#9;&#9;Firing = false
&#9;&#9;return
&#9;end

&#9;--weld the parts to the ship&apos;s main part
&#9;for _, ch in pairs(ship:GetChildren()) do
&#9;&#9;if ch:IsA(&apos;BasePart&apos;) and ch ~= ship.ShipPart_Base then
&#9;&#9;&#9;local w = Create&apos;Weld&apos;{
&#9;&#9;&#9;&#9;Part0 = ship.ShipPart_Base,
&#9;&#9;&#9;&#9;Part1 = ch,
&#9;&#9;&#9;&#9;C0 = ship.ShipPart_Base.CFrame:inverse()*ch.CFrame,
&#9;&#9;&#9;&#9;C1 = CFrame.new(),
&#9;&#9;&#9;}
&#9;&#9;&#9;w.Parent = ship.ShipPart_Base
&#9;&#9;&#9;ch.Anchored = false
&#9;&#9;end
&#9;end

&#9;--unanchor the body to prepare for throw
&#9;ship.ShipPart_Base.Anchored = false
&#9;Create&apos;BodyPosition&apos;{
&#9;&#9;Name = &apos;Mover&apos;,
&#9;&#9;Parent = ship.ShipPart_Base,
&#9;&#9;maxForce = Vector3.new(100000, 100000, 100000),
&#9;&#9;position = ship.ShipPart_Base.Position,
&#9;}

&#9;--now, throw the ship at them
&#9;local throwDist = ((Tool.HeadPart.CFrame*CFrame.new(0, 4, 0)).p - hitPos).magnitude + 1
&#9;for i = 0, 1, 1/(30*throwDist/60) do --60 = velocity in studs / second
&#9;&#9;if hitHumanoid then
&#9;&#9;&#9;--shut.. down.. everything!! We hit a humanoid, so stop here
&#9;&#9;&#9;break
&#9;&#9;end
&#9;&#9;ship.ShipPart_Base.Mover.position = (baseAnimCF*CFrame.new(0, 0, -throwDist*i*i)).p
&#9;&#9;wait()
&#9;&#9;if not Equipped then return end
&#9;end
&#9;ship.ShipPart_Base.Mover.position = (baseAnimCF*CFrame.new(0, 0, -throwDist)).p
&#9;wait()
&#9;if not Equipped then return end

&#9;--do the initial damage to the hit humanoid
&#9;if hitHumanoid then
&#9;&#9;InflictDamage(hitHumanoid, 100)
&#9;end

&#9;--shatter the ship
&#9;--breakjoints it and then give the pieces some initial velocity
&#9;--to get a nice parabolic motion away from the point of detonation
&#9;ship:BreakJoints()
&#9;for _, ch in pairs(ship:GetChildren()) do
&#9;&#9;if ch:IsA(&apos;BasePart&apos;) and ch ~= ship.ShipPart_Base then
&#9;&#9;&#9;ch.Velocity = ch.Velocity + Vector3.new(math.random(-15,15), math.random(40,65), math.random(-15, 15))
&#9;&#9;end
&#9;end

&#9;--throw some smoke into the ship&apos;s base
&#9;Create&apos;Smoke&apos;{
&#9;&#9;Parent = ship.ShipPart_Base,
&#9;&#9;Color = Color3.new(0,0.5,0),
&#9;&#9;Size = 10,
&#9;}
&#9;ship.ShipPart_Base.Transparency = 1

&#9;--now also stun the things near me
&#9;local stunnedHumanoidMap = {}
&#9;for _, p in pairs(game.Players:GetChildren()) do
&#9;&#9;if p:IsA(&apos;Player&apos;) and p ~= Tool.Player and p.Character and p.Character:FindFirstChild(&apos;Torso&apos;) then
&#9;&#9;&#9;local hum = p.Character.Humanoid
&#9;&#9;&#9;local tor = p.Character.Torso
&#9;&#9;&#9;if (tor.Position - ship.ShipPart_Base.Position).magnitude &lt; 15 then
&#9;&#9;&#9;&#9;local stun = script.Parent.StunnerScript:Clone()
&#9;&#9;&#9;&#9;stun.Disabled = false
&#9;&#9;&#9;&#9;stun.Parent = p.Character
&#9;&#9;&#9;&#9;stunnedHumanoidMap[hum] = true
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end

&#9;--show a stun area effect
&#9;local stunAreaPart = Create&apos;Part&apos;{
&#9;&#9;Name = &apos;StunAreaEffect&apos;,
&#9;&#9;FormFactor = &apos;Custom&apos;,
&#9;&#9;Parent = Tool.Character,
&#9;&#9;BrickColor = BrickColor.new(1022),
&#9;&#9;Shape = &apos;Ball&apos;,
&#9;&#9;Anchored = true,
&#9;&#9;CanCollide = false,
&#9;&#9;Transparency = 0,
&#9;&#9;Size = Vector3.new(0.1,0.1,0.1),
&#9;}
&#9;Spawn(function()
&#9;&#9;stunAreaPart.CFrame = ship.ShipPart_Base.CFrame
&#9;&#9;for i = 0, 1, 0.06 do
&#9;&#9;&#9;local par = stunAreaPart.Parent
&#9;&#9;&#9;stunAreaPart.Parent = nil
&#9;&#9;&#9;--
&#9;&#9;&#9;stunAreaPart.Transparency = i^1.5
&#9;&#9;&#9;local sz = 15 * i^3
&#9;&#9;&#9;stunAreaPart.Size = Vector3.new(sz, sz, sz)
&#9;&#9;&#9;--
&#9;&#9;&#9;stunAreaPart.Parent = par
&#9;&#9;&#9;wait()
&#9;&#9;end
&#9;&#9;stunAreaPart:Destroy()
&#9;end)
&#9;Tool.Bin:add(function()
&#9;&#9;stunAreaPart:Destroy()
&#9;end)

&#9;--now invisible-ify the parts gradually over 2 seconds before stopping the smoke anim
&#9;--and removing the last remnants of the ship
&#9;for i = 0, 1, (1/30)/2 do
&#9;&#9;for _, pDat in pairs(partData) do
&#9;&#9;&#9;if pDat.Part ~= ship.ShipPart_Base then
&#9;&#9;&#9;&#9;pDat.Part.Transparency = i
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;wait()
&#9;&#9;if not Equipped then return end
&#9;end

&#9;--wait an extra couple seconds
&#9;wait(2)
&#9;if not Equipped then return end

&#9;--finally, destroy the ship (Note: This kills the ship)
&#9;ship:Destroy()
&#9;Ship = nil
&#9;Firing = false
&#9;LastFire = tick()
end)


local function SetProgress(frac)
&#9;RechargeGui.MainFrame.ProgressBar.Size = UDim2.new(frac, 0, 1, 0)
&#9;if frac == 1 then
&#9;&#9;RechargeGui.MainFrame.ProgressText.Text = &quot;~ Ghost Ship Ready ~&quot;
&#9;else
&#9;&#9;RechargeGui.MainFrame.ProgressText.Text = &quot;Charging &quot;..math.floor(frac*100)..&quot;%&quot;
&#9;end
end

Tool.Equipped:connect(function()
&#9;RechargeGui.Parent = Tool.Player.PlayerGui
&#9;Equipped = true
&#9;while Equipped do
&#9;&#9;if (Tool.HeadPart.Position - Tool.Mouse.Hit.p).magnitude &gt; 150 then
&#9;&#9;&#9;Tool.Mouse.Icon = &apos;http://www.roblox.com/asset/?id=71445795&apos;
&#9;&#9;else
&#9;&#9;&#9;Tool.Mouse.Icon = &apos;http://www.roblox.com/asset/?id=71445802&apos;
&#9;&#9;end
&#9;&#9;if Firing then
&#9;&#9;&#9;SetProgress(0)
&#9;&#9;else
&#9;&#9;&#9;SetProgress(math.min(1, (tick()-LastFire)/2))
&#9;&#9;end
&#9;&#9;wait()
&#9;end
end)


Tool.Unequipped:connect(function()
&#9;Firing = false
&#9;LastFire = tick()
&#9;Equipped = false
&#9;if Ship then
&#9;&#9;Ship:Destroy()
&#9;&#9;Ship = nil
&#9;end
&#9;RechargeGui.Parent = nil
end)

</ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX4">
			<Properties>
				<bool name="Disabled">true</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">StunnerScript</string>
				<ProtectedString name="Source">local hum = script.Parent:FindFirstChild(&apos;Humanoid&apos;)
if not hum then return end

hum.WalkSpeed = 0
hum.PlatformStand = true

wait(2)

hum.WalkSpeed = 16
hum.PlatformStand = false</ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX5">
			<Properties>
				<bool name="Disabled">true</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">DamageScript</string>
				<ProtectedString name="Source">while not script:FindFirstChild(&quot;Damage&quot;) or not script:FindFirstChild(&quot;Owner&quot;) do
&#9;script.ChildAdded:wait()
end
local DamageToDo = script.Damage.Value
local HumToDamage = script.Parent.Humanoid
local OwnerToTagAs = script.Owner.Value

function Create(ty)
&#9;return function(data)
&#9;&#9;local obj = Instance.new(ty)
&#9;&#9;for k, v in pairs(data) do
&#9;&#9;&#9;if type(k) == &apos;number&apos; then
&#9;&#9;&#9;&#9;v.Parent = obj
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;obj[k] = v
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;return obj
&#9;end
end

local tag = Create&apos;ObjectValue&apos;{
&#9;Name = &quot;creator&quot;, 
&#9;Value = OwnerToTagAs,
&#9;Parent = HumToDamage,
}
game.Debris:AddItem(tag, 1)

HumToDamage:TakeDamage(DamageToDo)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX6">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-1.84012079</X>
					<Y>8.04017639</Y>
					<Z>0.0642609224</Z>
					<R00>0.03490033</R00>
					<R01>0.372760981</R01>
					<R02>-0.92727083</R02>
					<R10>-0</R10>
					<R11>0.927836061</R11>
					<R12>0.372988224</R12>
					<R20>0.999390781</R20>
					<R21>-0.0130174123</R21>
					<R22>0.0323817842</R22>
				</CoordinateFrame>
				<CoordinateFrame name="Focus">
					<X>0</X>
					<Y>7.30000019</Y>
					<Z>9.53674316e-007</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>